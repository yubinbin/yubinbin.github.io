import{_ as r,c as a,a2 as t,o as s}from"./chunks/framework.CqbvlPrP.js";const p="/assets/img/program/3D/%E7%9B%B8%E6%9C%BA.jpeg",o="/assets/img/program/3D/%E7%9B%B8%E6%9C%BA2.jpeg",i="/assets/img/program/3D/%E7%9B%B8%E6%9C%BA3.jpeg",b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"programming/3D/three.js中的相机.md","filePath":"programming/3D/three.js中的相机.md"}'),n={name:"programming/3D/three.js中的相机.md"};function m(c,e,g,d,h,l){return s(),a("div",null,e[0]||(e[0]=[t('<h3 id="three-js中的相机" tabindex="-1">three.js中的相机 <a class="header-anchor" href="#three-js中的相机" aria-label="Permalink to &quot;three.js中的相机&quot;">​</a></h3><p>所有的3D编程中都有一个避免不了的话题就是相机，<strong>相机就是这样一个抽象，它定义了三维空间到二维屏幕的投影方式，用“照相机”这样一个类比，可以使我们直观地理解这一投影方式</strong>。而针对投影方式的不同，<strong>照相机又分为正交投影照相机与透视投影照相机。</strong></p><p><code>PerspectiveCamera</code>(透视相机) 这种投影模式是被设计用来模拟人类眼睛观察事物的方式。这是3d渲染中最经常使用的投影模式。</p><p><code>PerspectiveCamera( fov : Number, aspect : Number, near : Number, far : Number )</code></p><p>fov: 可视角度 aspect: 为width/height,通常设置为canvas元素的高宽比。 near: 近端距离 far: 远端距离</p><p><img src="'+p+`" alt="img"></p><p>另一种常用的相机就是正交相机，</p><p><code>OrthographicCamera</code>(正交相机)</p><p>使用这种投影模式，<strong>无论物体离照相机的距离是多少，物体的大小始终保持不变</strong>。这在渲染2d场景、UI元素以及其他场景是很有用的。一般说来，对于制图、建模软件通常使用正交投影，这样不会因为投影而改变物体比例。</p><div class="language-javaScript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javaScript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">OrthographicCamera</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">( left : Number, right : Number, top : Number, bottom : Number, near : Number, far : Number )</span></span></code></pre></div><p>left: 视锥左侧面 right: 视锥右侧面 top: 视锥上侧面 bottom: 视锥下侧面 near: 近端距离 far: 远端距离</p><p><img src="`+o+'" alt="img"></p><p><strong>除了这两种常用的相机，还有一类特殊的相机</strong></p><p><code>CubeCamera</code>(立方体相机或全景相机) <code>CubeCamera( near : Number, far : Number, cubeResolution : Number )</code></p><p>near: 近端距离 far: 远端距离 cubeResolution: 立方体的长度 其实全景相机就是前后左右上下六个方向都加上一个透视相机。</p><p><code>StereoCamera</code>(3D相机) 双相机，被用于需要3d立体效果，视差栅栏的场景 其实本质就是左右两个透视相机。 <img src="'+i+'" alt="img"></p>',16)]))}const _=r(n,[["render",m]]);export{b as __pageData,_ as default};
