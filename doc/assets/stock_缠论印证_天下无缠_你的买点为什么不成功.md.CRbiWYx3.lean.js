import{_ as t,c as a,a2 as e,o as s}from"./chunks/framework.CqbvlPrP.js";const o="/assets/img/chan/%E7%BC%A0%E8%AE%BA%E5%8D%B0%E8%AF%81/%E5%A4%A9%E4%B8%8B%E6%97%A0%E7%BC%A0/2.jpg",E=JSON.parse('{"title":"你的买点为什么不成功 ？","description":"","frontmatter":{},"headers":[],"relativePath":"stock/缠论印证/天下无缠/你的买点为什么不成功.md","filePath":"stock/缠论印证/天下无缠/你的买点为什么不成功.md"}'),r={name:"stock/缠论印证/天下无缠/你的买点为什么不成功.md"};function c(n,p,_,i,d,l){return s(),a("div",null,p[0]||(p[0]=[e('<h1 id="你的买点为什么不成功" tabindex="-1">你的买点为什么不成功 ？ <a class="header-anchor" href="#你的买点为什么不成功" aria-label="Permalink to &quot;你的买点为什么不成功 ？&quot;">​</a></h1><p>我在这里啰嗦两句，希望朋友们不要介意，因为真的很恼火。</p><p>我是不是一只没有讲过买卖点的问题，这段时间后台一直有人问买卖点的问题，我先是告知他们去看看之前的文章，说多不多，说少不少，我写了起码30多篇文章了吧，是的，我起先是说过我只是自己写着梳理自己的知识脉络，但也不代表我写的东西对大家毫无启示意义吧，我甚至后来自己看过去，都觉得自己实际上被大家的问题带偏了。</p><p><img src="'+o+'" alt="图片"></p><p>行了，我也别废话了，上个图，如果大家最后真的迷失在图形里，别怪我就行。</p><p>一个问题，两个图，都是30下，问题来了，两个图的反弹都是同级别，那么回调的二类买点你做是不做？</p><p>先说答案，按照祖师爷制定的标准，都是买点。</p><p>祖师爷的说完了，现在说我的，第一个我会做，第二个我不做。</p><p>为什么？因为我的介入标准或者说介入逻辑不是买卖点，而是走势规律，我先考虑的是走势规律。是不是还是不明白？没关系，我今天一次给你说个明白。</p><p>30下，5分上，回调，我做多，为什么？二买么，没有理由不做多，那么为什么第二个图我不做多？也是二买啊！</p><p>仔细看看图形，图一和图二有什么区别？</p><p>图一的回调和图二的回调有什么区别？</p><p>图二的回调是不是正好跟上方的30下形成了同级别的中枢级别？</p><p>看明白了么？</p><p>图二你做进去，是的，也同样可以形成30上，我不否认这一点，但是，当下看过去，是不是图二的回调正好构成了与上方30分中枢同级别的中枢？（30 下后形成了两个次级别也就是两个5分的下，即离开段是两个次级别的趋势走势类型，即5分趋势走势类型下）</p><p>是不是存在这么一种可能，30盘整走势类型下，变成30趋势走势类型下，我现在就问你们，是不是有这种可能？</p><p>再回过头来看，按照祖师爷的标准，这两个图是不是在买卖点的问题上，是一致的？</p><p>这些我前面没讲过么？我讲过，兄弟姐们，你们仔细看过没？</p><p>所以换句话说，为什么你们的买点总是失败？是因为你们总是拿买卖点当作操作的逻辑，而这两个图恰恰就是告诉你们，买卖点不是逻辑，操作的逻辑是走势规律，走势一旦触及走势规律的红线，买卖点便是糟粕，只有在规律的标准里，买卖点才是可以被用作操作的特征之一。</p><p>我再说明白一点，图一和图二是不是都是买点？图一的回调是不是没有形成与上方同级别的中枢？图二的回调呢？是不是与前方下跌的本级别的离开段重合构成了下跌的同级别中枢，那么意味着什么？是不是意味着这个回调有可能是构成与上方下跌级别同级别的中枢的一部分，即由上方的30分钟盘整走势类型下，变成30分钟趋势走势类型下啊？这么说，能不能明白？</p><p>所以逻辑是什么？到底是不是买卖点？这会儿咱们能不能有个准确的认知？</p><p>我前面有章节讲过缠论的整体逻辑，你们高低看看行不？如果总是在这么一两个点纠结，你们啥时候能在这个市场里收获自由啊，这一点点的耐心，都不舍得付出吗？</p><p>能看到这篇文章的你，一定对你生活的现状不太满意，那么，请你多一点点耐心，去了解这一点点不太复杂的理论，希望对您会有些许帮助。</p>',23)]))}const f=t(r,[["render",c]]);export{E as __pageData,f as default};
