import{_ as p,c as n,a2 as t,o as r}from"./chunks/framework.CqbvlPrP.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"programming/3D/立方纹理图片命名对照.md","filePath":"programming/3D/立方纹理图片命名对照.md"}'),a={name:"programming/3D/立方纹理图片命名对照.md"};function s(o,e,c,T,_,i){return r(),n("div",null,e[0]||(e[0]=[t('<h3 id="three-js-立方纹理图片命名对照" tabindex="-1">Three.js 立方纹理图片命名对照 <a class="header-anchor" href="#three-js-立方纹理图片命名对照" aria-label="Permalink to &quot;Three.js 立方纹理图片命名对照&quot;">​</a></h3><p>Three.js 中 CubeTexture （立方纹理）经常用作天空背景。</p><p>如 案例 中，广州塔的背景就是使用该方法。</p><p>但是 CubeTexture 接收图片路径的数组作为参数，且图片的顺序不可更改，再实际开发中可能会遇到一些问题。</p><p>天空使用 CubeTexture 实现</p><p>问题 最大的问题就是官网给的代码片段，图片命名不够直接，代码如下：</p><p>const scene = new THREE.Scene(); scene.background = new THREE.CubeTextureLoader() .setPath( &#39;textures/cubeMaps/&#39; ) .load( [ &#39;px.png&#39;, &#39;nx.png&#39;, &#39;py.png&#39;, &#39;ny.png&#39;, &#39;pz.png&#39;, &#39;nz.png&#39; ] ); 如果碰巧设计同学给到的贴图是这样的：</p><p>那 BACK、BOTTOM、FRONT、LEFT、RIGHT、TOP 和 px、nx、py、ny、pz、nz 怎么一一对应呢？</p><p>解决方法 解决的方式，就是将立方体的 6 个面展开来，将 BACK、BOTTOM、FRONT、LEFT、RIGHT、TOP 和 px、nx、py、ny、pz、nz 分别标注到每个面，然后将参考图同步给设计以及开发。</p><p>立方体的展开图</p><p>总结 通过参考图的方式，既解决了设计的命名困难，又解决了开发的图片置入顺序。</p>',11)]))}const m=p(a,[["render",s]]);export{d as __pageData,m as default};
